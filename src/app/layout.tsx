import type { Metadata } from "next";
import { Inter, Lexend } from 'next/font/google'
import { AuthProvider } from "@/providers/auth.providers";
import { ToastContainer } from "react-toastify";
import "./globals.css";
import 'react-toastify/dist/ReactToastify.css';
import clsx from "clsx";


import '@/styles/tailwind.css'

const inter = Inter({
    subsets: ['latin'],
    display: 'swap',
    variable: '--font-inter',
})

const lexend = Lexend({
    subsets: ['latin'],
    display: 'swap',
    variable: '--font-lexend',
})

const customToastStyle = {
    backgroundColor: '#ffffff', // Tailwind's bg-gray-800
    color: '#0f172a', // White text
    borderRadius: '0.375rem', // Rounded-md (6px)
    border: '1px solid #4b5563', // Tailwind's border-gray-600
    padding: '1rem', // Comfortable padding
    fontSize: '0.875rem', // Text-sm
    lineHeight: '1.25rem', // Leading-5
    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', // Subtle shadow for depth\
};


export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function RootLayout({ children }: Readonly<{children: React.ReactNode}>) {
    return (
        <html lang="en" className={clsx('h-full scroll-smooth bg-white antialiased', inter.variable, lexend.variable )}>
            <body className={'flex h-full flex-col'}>
                <AuthProvider>
                    <ToastContainer
                        toastStyle={customToastStyle}
                        position="top-right" // Customize position if needed
                        autoClose={5000} // Automatically close after 5 seconds
                        hideProgressBar={false} // Show or hide progress bar
                        newestOnTop={true} // Newest toasts appear on top
                        closeOnClick={true} // Close toast on click
                        pauseOnHover={true} // Pause timer on hover
                        draggable={true} // Enable drag to close
                        theme="light" // Apply dark theme
                    />
                    {children}
                </AuthProvider>
            </body>
        </html>
    );
}
